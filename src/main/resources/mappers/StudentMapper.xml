<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.onlineLearning.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.example.onlineLearning.domain.Student">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="student_number" jdbcType="VARCHAR" property="studentNumber" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="class_id" jdbcType="BIGINT" property="classId" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="creation_time" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="update_operator_id" jdbcType="BIGINT" property="updateOperatorId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.onlineLearning.domain.Student">
    insert into student (id, student_number, name, 
      class_id, start_date, end_date, 
      creator_id, creation_time, update_operator_id, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{studentNumber,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{classId,jdbcType=BIGINT}, #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}, 
      #{creatorId,jdbcType=BIGINT}, #{creationTime,jdbcType=TIMESTAMP}, #{updateOperatorId,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.onlineLearning.domain.Student">
    update student
    set student_number = #{studentNumber,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=BIGINT},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      creator_id = #{creatorId,jdbcType=BIGINT},
      creation_time = #{creationTime,jdbcType=TIMESTAMP},
      update_operator_id = #{updateOperatorId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, student_number, name, class_id, start_date, end_date, creator_id, creation_time, 
    update_operator_id, update_time
    from student
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, student_number, name, class_id, start_date, end_date, creator_id, creation_time, 
    update_operator_id, update_time
    from student
  </select>

  <!--批量导入数据到数据库-->
  <insert id="insertStudentData" parameterType="java.util.ArrayList" >
    INSERT INTO student(student_number, name,
    class_id, start_date, end_date,
    creator_id, update_operator_id)
    VALUES
    <foreach collection="studentList" index="index" item="item" separator=",">
      (
      #{item.studentNumber},#{item.name},#{item.classId},#{item.startDate},#{item.endDate},#{item.creatorId},#{item.creatorId} )
    </foreach>
  </insert>

</mapper>