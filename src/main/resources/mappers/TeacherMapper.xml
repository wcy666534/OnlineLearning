<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.onlineLearning.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.example.onlineLearning.domain.Teacher">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="creation_time" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from teacher
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.onlineLearning.domain.Teacher">
    insert into teacher ( account, nickname, avatar_url, phone_number, email,
      password)
    values ( #{account,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
      #{avatarUrl,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.onlineLearning.domain.Teacher">
    update teacher
    set account = #{account,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      creation_time = #{creationTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, account, nickname, avatar_url, phone_number, email, password, creation_time, 
    update_time
    from teacher
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, account, nickname, avatar_url, phone_number, email, password, creation_time, 
    update_time
    from teacher
  </select>
</mapper>